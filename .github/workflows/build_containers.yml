name: CI

on:


  push:
    branches: [ "main" ]
    
    
  release:
    types: [published]
  
    workflow_dispatch:    
    
jobs:

  publish:
    runs-on: ubuntu-latest
    steps:
    
    - name: sync src
      uses: actions/checkout@v3
      
    - name: export secrets
      run: export FILE_PWD=${{ secrets.FILE_PWD }}    
    
    - name: publish to registry
      #uses: pennsignals/publish_docker-compose@v0.2.6-rc.1
      uses: ascerb/publish_docker-compose@0.0.1
      with:
        #version: '0.1.1' # optional
        docker_compose: 'docker-compose.yml' # required
        repo_token: "${{ secrets.GITHUB_TOKEN }}"    



  deploy:
    runs-on: ubuntu-latest
    needs: publish
     
    steps:
    - name: install ssh keys
      # check this thread to understand why its needed:
      # https://stackoverflow.com/a/70447517
      run: |
        install -m 600 -D /dev/null ~/.ssh/id_rsa
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        ssh-keyscan -p ${{ secrets.SSH_PORT }} -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts

    - name: figure out version and pull
      run: |
        # Tagged release
        if [[ ${GITHUB_REF} == refs/tags/* ]]; then
            # Strip git ref prefix from $VERSION
            TAGNAME=$(echo "${GITHUB_REF}" | sed -e 's,.*/\(.*\),\1,')
            # Strip "v" prefix from tag name
            VERSION=$(echo $TAGNAME | sed -e 's/^v//')
        else
            VERSION=${GITHUB_SHA}
        fi
        echo "PULLING VERSION:"
        echo "$VERSION"
        # Pulling images *** TO REMAKE ***
        ssh -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "docker pull ghcr.io/${{ GITHUB_REPOSITORY }}/cbw_test_task.n8n:$VERSION && docker pull ghcr.io/${{ GITHUB_REPOSITORY }}/cbw_test_task.app:$VERSION && exit 0"
        # Stopping services
        ssh -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "docker stop cbw_app || true && docker stop cbw_n8n || true && docker rm cbw_app || true && docker rm cbw_n8n || true && exit 0"        
        # Starting services
        ssh -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "docker run -dt --restart=always -p 5678:5678 --name cbw_n8n ghcr.io/${{ GITHUB_REPOSITORY }}/cbw_test_task.n8n:$VERSION && docker run -dt --restart=always -p 3000:3000 --name cbw_app ghcr.io/${{ GITHUB_REPOSITORY }}/cbw_test_task.app:$VERSION && exit 0"        
        
    
    
    - name: cleanup
      run: rm -rf ~/.ssh